1)Sao chép module mẫu
-copy CTM\Customer --> USR\User
-Xóa tất cả thư mục bin và obj bên trong
2)Rename 
-Rename Tên thư mục theo cấu trúc (Thư mục).(File)
--Mở powershell, nhảy đến thư mục của module mới:
cd D:\workspace\SalemanSoft\git\Code\company\USR\User\
--Chạy câu lệnh đổi tên
Get-ChildItem -Recurse -Filter *.CTM.Customer* | Rename-Item -NewName { $_.name -replace '.CTM.Customer', '.USR.User'} -verbose
Ex: Get-ChildItem -Recurse -Filter *.CTM.Customer* | Rename-Item -NewName { $_.name -replace '.CTM.Customer', '.PCR.ProductCategory'} -verbose
--Đổi tên file
Get-ChildItem -Recurse -Filter *Customer* | Rename-Item -NewName { $_.name -replace 'Customer', 'User'} -verbose
Ex: Get-ChildItem -Recurse -Filter *Customer* | Rename-Item -NewName { $_.name -replace 'Customer', 'ProductCategory'} -verbose


--Đổi tên trong nội dung của file code bằng visual studio code
+Mở visual studio code
+Mở thư mục D:\workspace\SalemanSoft\git\Code\company\USR\User
Ex: +Mở thư mục D:\workspace\SalemanSoft\git\Code\company\PRC\ProductCategory

+Chọn phân biệt hoa thường
+Thay CTM.Customer> USR.User 
+Thay Customer>User  [ProductCategory]
+Replace all
+Thay customer>user  [productCategory]
+Replace all


3)Làm việc tầng DATA
+Vào Data>D:\workspace\SalemanSoft\git\Code\company\USR\User\data
+Chạy Visual studio, build success to check;

Tìm câu lệnh trong Project Migrate.Real\cmds\Scaffold.txt
Câu lệnh đọc database để biến thành entity cho bảng user
Scaffold-DbContext 'Data Source=localhost;Initial Catalog=crmdb;User ID=root;Password=root' MySql.EntityFrameworkCore -Tables User
Scaffold-DbContext 'Data Source=localhost;Initial Catalog=crmdb;User ID=root;Password=root' MySql.EntityFrameworkCore -Tables ProductCategory

+Trong visual studio IDE, chọn Vsoft.Comapny.USR.User.Data.Migrate.Real
Set as startup project

+Mở package manager Console> Chọn default project: Vsoft.Company.USR.User.Data.Migrate.Real

+Run câu lệnh:
Scaffold-DbContext 'Data Source=localhost;Initial Catalog=crmdb;User ID=root;Password=root' MySql.EntityFrameworkCore -Tables User
Scaffold-DbContext 'Data Source=localhost;Initial Catalog=crmdb;User ID=root;Password=root' MySql.EntityFrameworkCore -Tables ProductCategory

4)Code sinh ra bảng User trong Vsoft.Company.USR.User.Data.Migrate.Real 
+Copy thuộc tính User vào VSoft.Company.USR.User.Data.Entity>MUserEntityBasic.cs
+Nếu id kiểu long hay int thì sửa lớp kế thừa IIdEntity<int> hay IIdEntity<long>

5)Copy code từ Vsoft.Company.USR.User.Data.Migrate.Real>CrmDbContext.cs
Sang VSoft.Company.USR.User.Data.Db\Contexts\UserDbContext.cs 
Theo cấu trúc tương tự;
	protected void ConfigTable(EntityTypeBuilder<MCustomerEntity> builder)
    {
        builder.ToTable("user");
    }
	
	 protected void ConfigIndex(EntityTypeBuilder<MCustomerEntity> builder)
    {
        builder.HasKey(e => e.Id).HasName("PRIMARY");
        builder.HasIndex(e => e.TeamId, "FK_Team_TO_User");
    }

  
    protected void ConfigBasicFields(EntityTypeBuilder<MCustomerEntity> builder)
    {
        builder.Property(e => e.Id).HasColumnType("int(11)");
        builder.Property(e => e.Email)
            .HasMaxLength(100)
            .HasDefaultValueSql("'NULL'");
        builder.Property(e => e.Name).HasMaxLength(100);
        builder.Property(e => e.Password).HasMaxLength(100);
        builder.Property(e => e.Phone).HasMaxLength(100);
        builder.Property(e => e.TeamId)
            .HasDefaultValueSql("'NULL'")
            .HasColumnType("int(11)");
        builder.Property(e => e.Username).HasMaxLength(100);
    }
	
6)Delete migration folder trong VSoft.Company.USR.User.Data.Migrate.Real
+Delete migration folder, delete file code vừa được sinh ra (CrmDbContext.cs,MUserEntity.cs )
+Tạo lại migration
+Mở package manager Console> add-migration Init 

7)Làm việc tầng Repository
+Add reference:
+Build và sửa lỗi cho các field: Replace all ', long' into ', int'
+Chạy UnitTest cho các hàm create, update, delete
+Kiểm tra với table trong database

8) Làm việc với Business: Convert Entity qua Dto
+Mở VSoft.Company.USR.User.Business.Dto>UserDto.cs
+Copy từ VSoft.Company.USR.User.Data.Entity>MUserEntity.cs => Lấy các thuộc tính của Entity, chép vào UserDto
+Chỉnh lại code trong VSoft.Company.USR.User.Business.Dto.Extension> UserDtoMethods.cs, UserEntityMethods.cs
+Build và chạy code trong UnitTest cho chức năng: create, update, delete;

9) Làm việc với tầng API
Build
Chọn VSoft.Company.USR.User.Api.UnitTest.Real> Set Startup Project;
Run